
Id: 4
Execution Stack: [(String varf,(varf=test.in,(fileOpen(varf),(int varc,(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf)))))))))]
Symbol Table: 
Output: 
File Table: 
Heap: 

Id: 4
Execution Stack: [String varf, (varf=test.in,(fileOpen(varf),(int varc,(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf))))))))]
Symbol Table: 
Output: 
File Table: 
Heap: 

Id: 4
Execution Stack: [(varf=test.in,(fileOpen(varf),(int varc,(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf))))))))]
Symbol Table: 
varf -> 
Output: 
File Table: 
Heap: 

Id: 4
Execution Stack: [varf=test.in, (fileOpen(varf),(int varc,(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf)))))))]
Symbol Table: 
varf -> 
Output: 
File Table: 
Heap: 

Id: 4
Execution Stack: [(fileOpen(varf),(int varc,(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf)))))))]
Symbol Table: 
varf -> test.in
Output: 
File Table: 
Heap: 

Id: 4
Execution Stack: [fileOpen(varf), (int varc,(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf))))))]
Symbol Table: 
varf -> test.in
Output: 
File Table: 
Heap: 

Id: 4
Execution Stack: [(int varc,(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf))))))]
Symbol Table: 
varf -> test.in
Output: 
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [int varc, (fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf)))))]
Symbol Table: 
varf -> test.in
Output: 
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [(fileRead(varf, varc),(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf)))))]
Symbol Table: 
varf -> test.in
varc -> 0
Output: 
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [fileRead(varf, varc), (print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf))))]
Symbol Table: 
varf -> test.in
varc -> 0
Output: 
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [(print(varc),(fileRead(varf, varc),(print(varc),fileClose(varf))))]
Symbol Table: 
varf -> test.in
varc -> 15
Output: 
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [print(varc), (fileRead(varf, varc),(print(varc),fileClose(varf)))]
Symbol Table: 
varf -> test.in
varc -> 15
Output: 
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [(fileRead(varf, varc),(print(varc),fileClose(varf)))]
Symbol Table: 
varf -> test.in
varc -> 15
Output: 
15
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [fileRead(varf, varc), (print(varc),fileClose(varf))]
Symbol Table: 
varf -> test.in
varc -> 15
Output: 
15
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [(print(varc),fileClose(varf))]
Symbol Table: 
varf -> test.in
varc -> 50
Output: 
15
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [print(varc), fileClose(varf)]
Symbol Table: 
varf -> test.in
varc -> 50
Output: 
15
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: [fileClose(varf)]
Symbol Table: 
varf -> test.in
varc -> 50
Output: 
15
50
File Table: 
test.in -> java.io.BufferedReader@6477463f
Heap: 

Id: 4
Execution Stack: []
Symbol Table: 
varf -> test.in
varc -> 50
Output: 
15
50
File Table: 
Heap: 

